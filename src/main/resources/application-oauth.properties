# Google OAuth Client ID
spring.security.oauth2.client.registration.google.client-id=[my-google.client-id]
# Google OAuth Client PASSWORD
spring.security.oauth2.client.registration.google.client-secret=[my-google.client-secret]
# 기본 값 openid,profile,email
# openid를 뺀 이유는 ㄴcope가 있으면 Open Id Provider로 인식하기 때문
# 이렇게 되면 OpenId Provider 인 서비스(구글)와 그렇지 않은 서비스(네이버/카카오등)로 나눠서 각각 OAuth2Service를 만들어야한다.
# 하나의 OAuth2Serviced로 사용하기 위해 일부러 openid scope를 빼고 등록한다.
spring.security.oauth2.client.registration.google.scope=profile,email

# Naver
# 네이버는 스프링 시큐리티를 공식 지원하지 않기 때문에 구글처럼 Common-OAuth2Provier에서 해주던 값들도 전부 수동으로 입력해야 한다.
spring.security.oauth2.client.registration.naver.client-id=[my-naver.client-id]
spring.security.oauth2.client.registration.naver.client-secret=[my-naver.client-secret]
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver

# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# 기준이 되는 user_name의 이름을 네이버에서는 response로 해야한다.
# 이유는 네이버의 회원 조회 시 반환되는 JSON 형태 때문.
# 스프링 시큐리티에서는 하위 필드를 명시할 수 없다. 최상위 필드들만 user_name으로 지정 가능하다. 하지만 네이버의 응답값 최상위 필드는
# resultCode, message, response 이다.
# 이러한 이유로 스프링 시큐리티에서 인식 가능한 필드는 위의 3개 중에 골라야 한다.
# 본문에 담고 있는 response를 user_name으로 지정하고 이후 자바코드를 response의 id를 user_name으로 지정 하도록 한다.
spring.security.oauth2.client.provider.naver.user-name-attribute=response